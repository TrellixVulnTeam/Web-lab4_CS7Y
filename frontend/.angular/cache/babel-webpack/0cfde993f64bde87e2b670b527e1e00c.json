{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpService } from \"../http.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction RegistrationFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alertMsg, \" \");\n  }\n}\n\nexport class User {\n  constructor(login, password) {\n    this.login = login;\n    this.password = password;\n  }\n\n}\nexport let RegistrationFormComponent = /*#__PURE__*/(() => {\n  class RegistrationFormComponent {\n    constructor(httpService, router) {\n      this.httpService = httpService;\n      this.router = router;\n      localStorage.removeItem(\"userToken\");\n      this.alertMsg = \"\";\n      this.validInput = true;\n      this.registrationForm = new FormGroup({\n        \"loginEntry\": new FormControl(\"\", [Validators.required, Validators.pattern(\"[a-zA-Z0-9]+\")]),\n        \"passwordEntry\": new FormControl(\"\", [Validators.required, Validators.pattern(\"[a-zA-Z0-9]+\")])\n      });\n    }\n\n    submit() {\n      this.dropAlert();\n      let loginControl = this.registrationForm.controls['loginEntry'];\n      let passwordControl = this.registrationForm.controls['passwordEntry'];\n      this.parseError(loginControl.errors, passwordControl.errors);\n      if (!this.validInput) return;\n      let login = loginControl.value;\n      let password = passwordControl.value;\n      this.httpService.regRequest(new User(login, password)).subscribe(data => {\n        if (data.success) this.router.navigate([\"/login\"]);else this.setAlert(data.info);\n      });\n    }\n\n    parseError(loginErr, passwordErr) {\n      if (loginErr == null && passwordErr == null) {\n        return;\n      }\n\n      if (loginErr != null) {\n        if (loginErr['pattern'] != undefined) {\n          this.setAlert(\"There is allowed only word characters\");\n          return;\n        }\n\n        if (loginErr['required'] != undefined) {\n          this.setAlert(\"Entries shouldn't be empty\");\n          return;\n        }\n      }\n\n      if (passwordErr != null) {\n        if (passwordErr['pattern'] != undefined) {\n          this.setAlert(\"There is allowed only word characters\");\n          return;\n        }\n\n        if (passwordErr['required'] != undefined) {\n          this.setAlert(\"Entries shouldn't be empty\");\n          return;\n        }\n      }\n    }\n\n    setAlert(msg) {\n      this.alertMsg = msg;\n      this.validInput = false;\n    }\n\n    dropAlert() {\n      this.alertMsg = \"\";\n      this.validInput = true;\n    }\n\n  }\n\n  RegistrationFormComponent.ɵfac = function RegistrationFormComponent_Factory(t) {\n    return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  RegistrationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationFormComponent,\n    selectors: [[\"app-registration-form\"]],\n    features: [i0.ɵɵProvidersFeature([HttpService])],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"form-signin\"], [3, \"formGroup\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [1, \"form-floating\"], [\"formControlName\", \"loginEntry\", \"name\", \"login\", \"id\", \"floatingInput\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"formControlName\", \"passwordEntry\", \"name\", \"password\", \"type\", \"password\", \"id\", \"floatingPassword\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n    template: function RegistrationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Please sing up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RegistrationFormComponent_Template_button_click_12_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(13, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RegistrationFormComponent_div_14_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !ctx.validInput);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf],\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}body[_ngcontent-%COMP%]{display:flex;align-items:center;padding-top:40px;padding-bottom:40px;background-color:#f5f5f5}.form-signin[_ngcontent-%COMP%]{width:100%;max-width:330px;padding:15px;margin:auto}.form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]{font-weight:400}.form-signin[_ngcontent-%COMP%]   .form-floating[_ngcontent-%COMP%]:focus-within{z-index:2}.form-signin[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]{margin-bottom:-1px;border-bottom-right-radius:0;border-bottom-left-radius:0}.form-signin[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]{margin-bottom:10px;border-top-left-radius:0;border-top-right-radius:0}.alert-danger[_ngcontent-%COMP%]{margin-top:1.5rem;text-align:center}\"]\n  });\n  return RegistrationFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}